<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="chatMapper">
  	<resultMap type="chatRoom" id="chatRoomResultSet">
		  	<result column="CHAT_ROOM_NO" property="chatRoomNo"/>
		  	<result column="FIRST_MEM_ID" property="firstMemId"/>
		  	<result column="RECEIVE_MEM_ID" property="receiveMemId"/>
		  	

  	</resultMap>
  	<resultMap type="chatRoomList" id="chatRoomListResultSet">
		  	<result column="CHAT_ROOM_NO" property="chatRoomNo"/>
		  	<result column="FIRST_MEM_ID" property="firstMemId"/>
		  	<result column="RECEIVE_MEM_ID" property="receiveMemId"/>

			<result column="OTHER_ID" property="otherId"/>
			<result column="CHANGE_NAME" property="changeName"/>
			<result column="USER_NAME" property="userName"/>
			<result column="MESSAGE" property="message"/>
  	</resultMap>
 	<resultMap type="chatMsg" id="chatMsgResultSet">
	  	<result column="CM_NO" property="cmNo"/>
	  	<result column="MESSAGE" property="message"/>
	  	<result column="CREATE_DATE" property="createDate"/>
	  	<result column="CHAT_ROOM_NO" property="chatRoomNo"/>
	  	<result column="USER_ID" property="userId"/>
	 
  	</resultMap>
  	<resultMap type = "member" id = "memberResultSet">
			<result column = "USER_NO" property="userNo"/>
			<result column = "USER_ID" property="userId"/>
			<result column = "USER_PWD" property="userPwd"/>
			<result column = "USER_NAME" property="userName"/>
			<result column = "EMAIL" property="email"/>
			<result column = "PHONE" property="phone"/>
			<result column = "ADDRESS" property="address"/>
			<result column = "ORIGIN_NAME" property="originName"/>
			<result column = "CHANGE_NAME" property="changeName"/>
			<result column = "ENROLL_DATE" property="enrollDate"/>
			<result column = "GRADE" property="grade"/>
			<result column = "STATUS" property="status"/>
		</resultMap>
	
	<select id="selectFindUserList" parameterType="string" resultMap="memberResultSet">
		SELECT USER_ID,USER_NAME,CHANGE_NAME,ENROLL_DATE
		FROM MEMBER
		<choose>
			<when test="search == ''">
				WHERE STATUS = 'Y'
			</when>
			<otherwise>
				WHERE USER_ID LIKE '%'||#{search}||'%' 
				AND STATUS = 'Y'
			</otherwise>
		</choose>
		
	</select>
	
  	<insert id="insertChatRoom" parameterType="chatRoom">
  		INSERT INTO CHAT_ROOM(CHAT_ROOM_NO,FIRST_MEM_ID,RECEIVE_MEM_ID) 
  		VALUES (SEQ_CR_NO.NEXTVAL,#{firstMemId},#{receiveMemId})
  	</insert>
  	
  	<select id="checkExistChatRoom" parameterType="chatRoom" resultType="_int">
  		SELECT COUNT(*)
		FROM CHAT_ROOM
		WHERE (RECEIVE_MEM_ID = #{receiveMemId} AND FIRST_MEM_ID = #{firstMemId})
		OR (RECEIVE_MEM_ID = #{firstMemId} AND FIRST_MEM_ID = #{receiveMemId})

  	</select>
  	
  	<select id="selectChatList" parameterType="string" resultMap="chatRoomListResultSet">
  		<!-- SELECT CHAT_ROOM_NO
		      ,FIRST_MEM_ID
		      ,RECEIVE_MEM_ID
		      ,OTHER_ID
		      ,CHANGE_NAME
		      ,USER_NAME
		FROM
		(SELECT CHAT_ROOM_NO
		      ,FIRST_MEM_ID
		      ,RECEIVE_MEM_ID
		      ,CASE WHEN #{userId} = RECEIVE_MEM_ID THEN FIRST_MEM_ID
		            WHEN #{userId} = FIRST_MEM_ID THEN RECEIVE_MEM_ID         
		       END  "OTHER_ID"
		 
		FROM CHAT_ROOM C
		WHERE ((RECEIVE_MEM_ID = #{userId}) OR (FIRST_MEM_ID = #{userId}))
		)
		JOIN MEMBER M ON(OTHER_ID = USER_ID) -->
		
		SELECT CHAT_ROOM_NO,
		       FIRST_MEM_ID,
		       RECEIVE_MEM_ID,
		       OTHER_ID,
		       CHANGE_NAME,
		       USER_NAME,
		       MESSAGE
		FROM (
		    SELECT C.CHAT_ROOM_NO,
		           C.FIRST_MEM_ID,
		           C.RECEIVE_MEM_ID,
		           CASE WHEN #{userId} = C.RECEIVE_MEM_ID THEN C.FIRST_MEM_ID
		                WHEN #{userId} = C.FIRST_MEM_ID THEN C.RECEIVE_MEM_ID         
		           END AS "OTHER_ID",
		           M.CHANGE_NAME,
		           M.USER_NAME,
		           CM.MESSAGE,
		           CM.CREATE_DATE,
		           ROW_NUMBER() OVER (PARTITION BY C.CHAT_ROOM_NO ORDER BY CM.CREATE_DATE DESC) AS rn
		    FROM CHAT_ROOM C
		    JOIN MEMBER M ON (CASE WHEN #{userId} = C.RECEIVE_MEM_ID THEN C.FIRST_MEM_ID
		                           WHEN #{userId} = C.FIRST_MEM_ID THEN C.RECEIVE_MEM_ID         
		                      END = M.USER_ID)
		    LEFT JOIN CHAT_MESSAGE CM ON (C.CHAT_ROOM_NO = CM.CHAT_ROOM_NO)
		    WHERE ((C.RECEIVE_MEM_ID = #{userId}) OR (C.FIRST_MEM_ID = #{userId}))
		) T
		WHERE rn = 1
		ORDER BY CREATE_DATE DESC
  	</select>
  
  	<insert id="insertChatMsg" parameterType="chatMsg">
  		INSERT INTO CHAT_MESSAGE
  		VALUES(SEQ_CM_NO.NEXTVAL,#{message},#{createDate},#{chatRoomNo},#{userId},#{receiveId})
  	</insert>
  
  	<select id="selectChatMsg" parameterType="_int" resultMap="chatMsgResultSet">
  		SELECT *
  		FROM CHAT_MESSAGE
  		WHERE CHAT_ROOM_NO = #{chatRoomNo}
  	</select>
  	
  	<delete id="deleteRoom" parameterType="_int">
  		DELETE FROM CHAT_ROOM
  		WHERE CHAT_ROOM_NO = #{chatRoomNo}
  	</delete>
  	
  	
  </mapper>